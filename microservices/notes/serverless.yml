service: liberead-notes

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables
  - serverless-domain-manager

custom:
  customDomain:
    domainName: api.liberead.com
    basePath: notes
    stage: prod
    createRoute53Record: true
  dotenv:
    path: ../../.env

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: eu-west-1
  environment:
    booksTableName: books
    usersTableName: users
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:eu-west-1:*:*'

functions:
  updateNotes:
    handler: services/updateNotes.main
    events:
      - http:
          path: /{id}
          method: put
          cors: true
          authorizer: aws_iam
  deleteNotes:
    handler: services/deleteNotes.main
    events:
      - http:
          path: /{id}
          method: delete
          cors: true
          authorizer: aws_iam

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(../resources/api-gateway-errors.yml)}
