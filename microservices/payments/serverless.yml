service: liberead-payments

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: prod
  region: eu-west-1
  environment:
    booksTableName: books
    usersTableName: users
    transactionsTableName: transactions
    stripeSecretKey: ${env:STRIPE_SECRET_KEY}
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:eu-west-1:*:*'

functions:
  startPayIntent:
    handler: services/payments/startPayIntent.main
    events:
      - http:
          path: billing/start
          method: post
          cors: true
          authorizer: aws_iam
  cancelPayIntent:
    handler: services/payments/cancelPayIntent.main
    events:
      - http:
          path: billing/cancel
          method: post
          cors: true
          authorizer: aws_iam
  payIntentWebhook:
    handler: services/payments/payIntentWebhook.main
    events:
      - http:
          path: billing/payment_intent/webhook
          method: post
          cors: true

# Create our resources with separate CloudFormation templates
resources:
  # API Gateway Errors
  - ${file(resources/api-gateway-errors.yml)}
